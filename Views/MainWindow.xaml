<Window 
    x:Class="FikusIn.Views.MainWindow"
    x:Name="wMain"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:FikusIn" 
    xmlns:conv="clr-namespace:FikusIn.UIConverters"
    xmlns:utils="clr-namespace:FikusIn.Utils"
    xmlns:properties="clr-namespace:FikusIn.Properties"
    mc:Ignorable="d"
    Title="FikusIn" 
    Height="540" 
    Width="960" 
    WindowStyle="SingleBorderWindow"
    ResizeMode="CanResize" 
    WindowState="Maximized"
    WindowStartupLocation="CenterScreen"
    Background="#111111"
    
    MouseLeftButtonDown="Window_MouseLeftButtonDown"
    MouseLeftButtonUp="Window_MouseLeftButtonUp"
    MouseMove="Window_MouseMove"
    MouseWheel="Window_MouseWheel"
    ContentRendered="wMain_ContentRendered"
    SizeChanged="wMain_SizeChanged">

    <Window.Resources>
        <Style x:Key="WindowsButtons" TargetType="{x:Type Button}">
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Width" Value="46"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="FontSize" Value="32"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Opacity" Value="0.5"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="TextBlock.Foreground" Value="LightGray"/>
            <Setter Property="TextBlock.Opacity" Value="1"/>
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="TextBlock.Foreground" Value="DimGray"/>
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="WindowsButtonsX" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowsButtons}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E81123"/>
                    <Setter Property="TextBlock.Foreground" Value="White"/>
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>
       
        <Style x:Key="MenuButtons" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="FontSize" Value="42"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="#BBBBBB"/>
            <Setter Property="TextBlock.Foreground" Value="#555555"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFFFFF"/>
                </Trigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="25" />
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="AutoSizeTextBox" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="18" />
            <Setter Property="MaxWidth" Value="500" />
            <Setter Property="Margin" Value="0,1,10,0" />
            <Style.Triggers>
                <DataTrigger 
                    Binding="{Binding ActualWidth, RelativeSource={RelativeSource Self}, Converter={x:Static conv:IsGreaterThanConverter.Instance}, ConverterParameter=150}" 
                    Value="True">
                    <Setter Property="FontSize" Value="14" />
                    <Setter Property="MaxWidth" Value="200" />
                    <Setter Property="Margin" Value="0,5,10,0" />
                    <Setter Property="ToolTip" Value="{Binding Title}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TabCloseButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="5,0,5,0"/>
            <Setter Property="TextBlock.Foreground" Value="#999999"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="TextBlock.Foreground" Value="#FFFFFF"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TabButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Tag" Value="{Binding Id}"/>
            <Setter Property="Background" Value="#222222"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="Margin" Value="2,0,2,0"/>
            <Setter Property="TextBlock.Foreground" Value="#999999"/>
            <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="Command" Value="{Binding ElementName=tabsItemsControl, Path=DataContext.SetActiveDocument}"/>
            <Setter Property="CommandParameter" Value="{Binding}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" 
                                BorderThickness="0">
                            <StackPanel Orientation="Horizontal" Margin="20,0,0,0">
                                <TextBlock 
                                    Height ="23" 
                                    Text="{Binding Title}" 
                                    TextTrimming="CharacterEllipsis" 
                                    Style="{StaticResource AutoSizeTextBox}"/>
                                <Button Style="{StaticResource TabCloseButton}" 
                                        Command="{Binding ElementName=tabsItemsControl, Path=DataContext.CloseDocument}"
                                        CommandParameter="{Binding}"
                                        Margin="0,0,1,1">
                                    <TextBlock FontSize="16" Text="❎"/>
                                </Button>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsActive}" Value="True">
                                <Setter Property="Background" Value="#111111" />
                                <Setter Property="TextBlock.Foreground" Value="#FFFFFF"/>
                                <Setter Property="utils:FocusBehavior.IsFocus" Value="True"/>
                                <!--<Setter Property="Content" Value="btnDocTab_MakeActive"/>-->
                                <!--<Setter Property="TextBlock.FontWeight" Value="Bold"/>-->
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#111111"/>
                                <Setter Property="TextBlock.Foreground" Value="#FFFFFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FileToolbarButton" TargetType="{x:Type Button}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="TextBlock.Foreground" Value="#BBBBBB"/>
            <Setter Property="TextBlock.FontSize" Value="20"/>
            <Setter Property="TextBlock.FontFamily" Value="Consolas"/>
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#BBBBBB"/>
                    <Setter Property="TextBlock.Foreground" Value="#444444"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="FileMenuToggleButtons" TargetType="{x:Type ToggleButton}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="TextBlock.Foreground" Value="#BBBBBB"/>
            <Setter Property="TextBlock.FontSize" Value="20"/>
            <Setter Property="TextBlock.FontFamily" Value="Consolas"/>
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                Focusable="False"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#BBBBBB"/>
                    <Setter Property="TextBlock.Foreground" Value="#444444"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="#BBBBBB"/>
                    <Setter Property="TextBlock.Foreground" Value="#444444"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FileMenuButton" TargetType="{x:Type Button}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="#333333"/>
            <Setter Property="TextBlock.Foreground" Value="#BBBBBB"/>
            <Setter Property="TextBlock.FontSize" Value="18"/>
            <Setter Property="TextBlock.FontFamily" Value="Consolas"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="MinWidth" Value="150"/>
            <Setter Property="Command" Value="{Binding ElementName=icDocumentsList, 
                Path=DataContext.SetActiveDocument}"/>
            <Setter Property="CommandParameter" Value="{Binding}"/>
            <Setter Property="Content" Value="{Binding Title}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="A"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0"
                                               Text="{Binding Title}" Margin="21,2,10,4"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <!--<Border Background="{TemplateBinding Background}" BorderThickness="0">
                            <TextBlock Height ="18" Text="{Binding Title}" Margin="21,0,5,2"/>
                        </Border>-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#BBBBBB"/>
                    <Setter Property="TextBlock.Foreground" Value="#444444"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="OpenedDocumentListButton" TargetType="{x:Type Button}" BasedOn="{StaticResource FileToolbarButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderThickness="0" ContextMenuService.Placement="Bottom">
                            <TextBlock Text="🔻" Margin="0,2,0,0" FontWeight="Bold" FontSize="24"/>
                            <Border.ContextMenu>
                                <ContextMenu x:Name="cmenuDocList" 
                                             DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"
                                             ItemsSource="{Binding SortedDocumentNames}"/>
                            </Border.ContextMenu>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="ContextMenu.IsOpen" Value="True" TargetName="cmenuDocList"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <WindowChrome.WindowChrome>
        <WindowChrome 
            CaptionHeight="32"  
            ResizeBorderThickness="4"         
            GlassFrameThickness="1"/>
    </WindowChrome.WindowChrome>

    <Border Background="#111111">
        <Border.Style>
            <Style TargetType="{x:Type Border}">
                <Style.Triggers>
                    <!-- Add to avoid border disappearing when window is maximised -->
                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" 
                                 Value="Maximized">
                        <Setter Property="Margin" Value="8"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" 
                                 Value="Normal">
                        <Setter Property="Margin" Value="0"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>

        <Grid Background="#111111">
            <Grid.LayoutTransform>
                <ScaleTransform ScaleX="{Binding WindowScale}" ScaleY="{Binding WindowScale}" CenterX=".5" CenterY=".5" />
            </Grid.LayoutTransform>
            <Viewport3D 
                x:Name="v3dMain"
                ClipToBounds="False"
                IsHitTestVisible="True"             
                Width="Auto"
                Height="Auto">
                <Viewport3D.Camera>
                    <OrthographicCamera 
                    x:Name="v3dCamera" 
                    Position="0,0,40" 
                    LookDirection="0,0,-1" 
                    UpDirection="0,1,0"
                    FarPlaneDistance="Infinity"
                    NearPlaneDistance="-Infinity"
                    Width="100"/>
                </Viewport3D.Camera>
                <ModelVisual3D>
                    <ModelVisual3D.Content>
                        <Model3DGroup
                        x:Name="v3dScene">
                            <AmbientLight Color="#444444"/>
                            <PointLight x:Name="v3dLightTop" Color="#777777" Position="1,10,40"/>
                            <PointLight x:Name="v3dLightRight" Color="#444444" Position="10,-1,60"/>
                            <PointLight x:Name="v3dLightLeft" Color="#333333" Position="-10,2,20"/>
                        </Model3DGroup>
                    </ModelVisual3D.Content>
                </ModelVisual3D>
            </Viewport3D>

            <!-- Top window bar (file menu + doc tabs + window operation-->
            <DockPanel
                x:Name="pnlTop"
                HorizontalAlignment="Stretch" 
                VerticalAlignment="Top" 
                Height="26" 
                Width="Auto"
                Background="#333333">
                <Grid HorizontalAlignment="Stretch" 
                      utils:ScrollViewerHelper.WheelScrollsHorizontally="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    
                    <!--File menu-->
                    <StackPanel
                        Height="26" 
                        Width="Auto"
                        Background="#333333"
                        Orientation="Horizontal"
                        Margin="0,0,4,0">
                        <TextBlock Text="🌿" FontSize="20" Foreground="Green"/>
                        <!--<Image Source="{Binding Source={x:Static properties:Resources.Icon}}"
                            VerticalAlignment="Top" 
                            Margin="2,0,2,0"
                            Grid.Column="0"
                            Height="26"
                            Stretch="UniformToFill"
                            StretchDirection="DownOnly"/>-->
                        <Button Style="{StaticResource FileToolbarButton}"
                            ToolTip="New" 
                            Command="{Binding NewDocument}">
                            <TextBlock Text="📄" Margin="0,1,0,0"/>
                        </Button>
                        <Button Style="{StaticResource FileToolbarButton}"
                                ToolTip="Open"
                                x:Name="btnOpen">
                            <TextBlock Text="📂" Margin="0,0,0,0"/>
                        </Button>
                        <Button x:Name="btnOpen2"
                                ToolTip="Open..."
                                Margin="0,0,4,0">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource FileToolbarButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=btnOpen,
                                                   Path=IsMouseOver}" Value="True">
                                            <Setter Property="Background" Value="#777777" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <TextBlock Text="🔻" Margin="0,10,0,0" FontSize="14"/>
                        </Button>
                        <Button Style="{StaticResource FileToolbarButton}"
                                ToolTip="Save"
                                x:Name="btnSave">
                            <TextBlock Text="💾" Margin="0,1,0,0"/>
                        </Button>
                        <Button x:Name="btnSave2"
                                ToolTip="Save..."
                                Margin="0,0,4,0">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource FileToolbarButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=btnSave,
                                                   Path=IsMouseOver}" Value="True">
                                            <Setter Property="Background" Value="#777777" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <TextBlock Text="🔻" Margin="0,10,0,0" FontSize="14"/>
                        </Button>
                        <Button Style="{StaticResource FileToolbarButton}"
                            ToolTip="Scale"
                            Command="{Binding SetNextZoomFactor}">
                            <TextBlock Text="🗚" Margin="0,0,0,0" FontSize="24"/>
                        </Button>
                        <Button Style="{StaticResource FileToolbarButton}"
                            ToolTip="View Mode">
                            <TextBlock Text="🧊" Margin="0,1,0,0"/>
                        </Button>
                        <Button Style="{StaticResource FileToolbarButton}"
                            ToolTip="Settings">
                            <TextBlock Text="⚙️" Margin="0,1,0,0"/>
                        </Button>
                    </StackPanel>
                    
                    <!--Document tabs-->
                    <ScrollViewer x:Name="tabsScrollViewer" 
                                  Grid.Column="1" 
                                  HorizontalScrollBarVisibility="Hidden" 
                                  VerticalScrollBarVisibility="Hidden" 
                                  CanContentScroll="True"
                                  BorderThickness="0"
                                  Margin="0">
                        <Grid
                            DockPanel.Dock="Left"
                            Height="Auto"
                            Width="Auto"
                            Margin="0,0,0,0"
                            VerticalAlignment="Bottom"
                            HorizontalAlignment="Left">
                            <ItemsControl x:Name="tabsItemsControl" 
                                      ItemsSource="{Binding Documents}"
                                      Margin="0">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel 
                                            Height="Auto"
                                            Width="Auto"
                                            Margin="0,2,0,0"
                                            VerticalAlignment="Bottom"
                                            HorizontalAlignment="Left"
                                            Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Button Style="{StaticResource TabButtonStyle}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </ScrollViewer>
                    
                    <!--Right menu + window menu-->
                    <StackPanel 
                        x:Name="pnlTopRight"
                        Margin="0" 
                        VerticalAlignment="Top" 
                        HorizontalAlignment="Right"
                        Height="26"
                        Width="Auto"
                        Orientation="Horizontal"
                        Visibility="Visible"
                        DockPanel.Dock ="Right"
                        Grid.Column="2">
                        <ToggleButton x:Name="tbtnDocumentList" 
                                      Style="{StaticResource FileMenuToggleButtons}"
                                      IsHitTestVisible="{Binding ElementName=popupDocumentList, 
                                        Path=IsOpen, 
                                        Mode=OneWay, Converter={conv:BoolInverter}}">
                            <StackPanel>
                                <TextBlock Text="🔻" />
                                <Popup x:Name="popupDocumentList" 
                                       IsOpen="{Binding IsChecked, ElementName=tbtnDocumentList}"
                                       StaysOpen="False"
                                       AllowsTransparency="True">
                                    <Border BorderThickness="0.5"
                                            CornerRadius="0"
                                            Background="#333333"
                                            BorderBrush="#BBBBBB"
                                            Margin="0">
                                        <!--<StackPanel Orientation="Vertical"
                                                    Background="Transparent"
                                                    Margin="0"
                                                    HorizontalAlignment="Left">
                                            <Button Style="{StaticResource FileMenuButton}">
                                                <TextBlock Margin="21,0,5,0" Text="Test" Name="myPopupText"/>
                                            </Button>
                                            <Button Style="{StaticResource FileMenuButton}">
                                                <TextBlock Margin="21,0,5,0" Text="A very long name that wont fit in place" Name="myPopupText2"/>
                                            </Button>
                                        </StackPanel>-->
                                        <ItemsControl x:Name="icDocumentsList" 
                                            ItemsSource="{Binding Documents}"
                                            Margin="0">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel 
                                                        Margin="0"
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Left"
                                                        Orientation="Vertical"
                                                        Grid.IsSharedSizeScope="True"/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Button Style="{StaticResource FileMenuButton}"
                                                            Click="popupDocumentListButton_Click"/>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>

                                    </Border>
                                </Popup>
                            </StackPanel>
                        </ToggleButton>
                        <!--<Button Style="{StaticResource OpenedDocumentListButton}"/>-->
                        <Button             
                            x:Name="btnMinimize"
                            Style="{StaticResource WindowsButtons}"
                            Margin="0,0,0,0" 
                            Click="btnMinimize_Click">
                            <TextBlock Text="_" Margin="0,-25,0,0"/>
                        </Button>
                        <Button
                            x:Name="btnMaximize"
                            Style="{StaticResource WindowsButtons}"
                            Margin="0,0,0,0" 
                            Click="btnMaximize_Click">
                            <TextBlock Text="□" Margin="0,-14,0,0"/>
                        </Button>
                        <Button 
                            x:Name="btnClose"
                            Style="{StaticResource WindowsButtonsX}" 
                            Click="btnClose_Click">
                            <TextBlock Text="×" Margin="0,-11,0,0"/>
                        </Button>
                    </StackPanel>
                </Grid>
            </DockPanel>

            <!-- Selection box -->
            <Canvas 
                Height="Auto" 
                Width="Auto"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch">
                <Rectangle 
                    x:Name="canvasSelectionBox" 
                    Stroke="White" 
                    StrokeThickness="1" 
                    StrokeDashArray="2 2"                
                    Visibility="Collapsed"/>
            </Canvas>

            <!--Floating main operation menu-->
            <DockPanel 
            x:Name="pnlMenu"
            HorizontalAlignment="Stretch" 
            VerticalAlignment="Top" 
            Height="70" 
            Width="Auto"
            Margin="0,25,10,10" >                
                <Button 
                    x:Name="btnMenu"
                    DockPanel.Dock ="Left"
                    VerticalAlignment="Bottom" 
                    HorizontalAlignment="Left" 
                    Style="{StaticResource MenuButtons}"
                    MouseEnter="btnMenu_MouseEnter"
                    Click="btnMenu_Click">
                    <TextBlock Text="☰" FontWeight="Bold" Margin="0,-5,0,0" FontSize="34"/>
                </Button>

                <StackPanel 
                x:Name="pnlSubMenu"
                Margin="0" 
                DockPanel.Dock ="Right"
                VerticalAlignment="Bottom" 
                HorizontalAlignment="Stretch"
                Height="70"
                Width="Auto"
                Orientation="Horizontal">
                    <Button Style="{StaticResource MenuButtons}" 
                            ToolTip="New" 
                            Command="{Binding NewDocument}">
                        <TextBlock Text="📄" Margin="0,1,0,0" FontFamily="Consolas" FontSize="32"/>
                    </Button>
                    <Button 
                    x:Name="btnXXX"
                    Style="{StaticResource MenuButtons}"
                    ToolTip="Open">
                        <TextBlock Text="📂" Margin="2,-3,0,0" FontFamily="Consolas" FontSize="36"/>
                    </Button>
                    <Button 
                    x:Name="btnKKK"
                    Style="{StaticResource MenuButtons}"
                    ToolTip="Save">
                        <TextBlock Text="💾" Margin="0,1,0,0" FontFamily="Consolas" FontSize="32"/>
                    </Button>
                </StackPanel>
            </DockPanel>
            
            <!--Bottom: Message & Progressbars-->
            <Grid HorizontalAlignment="Stretch" 
                  VerticalAlignment="Bottom"
                  Margin="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Label 
                    x:Name="messageLabel" 
                    FontSize="24"
                    FontFamily="Calibri"
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Bottom"
                    HorizontalContentAlignment="Center"
                    Content="{Binding Message}" 
                    Foreground="{Binding MessageForeground}"
                    Background="{Binding MessageBackground}"
                    Grid.Row="0"
                    BorderThickness="0"
                    Margin="0">
                    <Label.Style>
                        <Style TargetType="Label">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ShowMessage}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation 
                                                    Storyboard.TargetProperty="Opacity" 
                                                    To="1" Duration="0:0:0.200" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation 
                                                    Storyboard.TargetProperty="Opacity" 
                                                    To="0" Duration="0:0:0.500" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ShowMessage}" Value="False" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation 
                                                    Storyboard.TargetProperty="Opacity" 
                                                    To="1" Duration="0:0:0.200" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation 
                                                    Storyboard.TargetProperty="Opacity" 
                                                    To="0" Duration="0:0:0.500" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
                <StackPanel
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Bottom"
                    Orientation="Vertical"
                    Grid.Row="1"
                    Margin="0">
                    <ItemsControl ItemsSource="{Binding ProgressList}" BorderThickness="0">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ProgressBar Minimum="{Binding Minimum}"
                                Maximum="{Binding Maximum}"
                                Value="{Binding Current}"
                                IsIndeterminate="{Binding IsIndeterminate}" 
                                BorderThickness="0"
                                Height="3"
                                Grid.Row="1"
                                Background="#000000"
                                Foreground="#FFFFFF"
                                Margin="0"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </Grid>
            
            <!--Floating windows and menus-->
            
            
        </Grid>
    </Border>
</Window>
